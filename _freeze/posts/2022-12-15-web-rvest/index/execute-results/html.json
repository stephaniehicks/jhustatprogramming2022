{
  "hash": "0a8888eda4c838dbcae97cb64adcce70",
  "result": {
    "markdown": "---\ntitle: \"Scraping data from the web with `rvest`\"\nauthor: \n  - name: Stephanie Hicks\n    url: https://stephaniehicks.com\n    affiliation: Department of Biostatistics, Johns Hopkins\n    affiliation_url: https://publichealth.jhu.edu\ndescription: \"Introduction to scrape (or harvest) data from web pages\"\ndate: 2022-12-15\ndraft: true\ncategories: [module 4, week 8, html, rvest]\n---\n\n\n<!-- Add interesting quote -->\n\n# Pre-lecture materials\n\n### Read ahead\n\n::: callout-note\n## Read ahead\n\n**Before class, you can prepare by reading the following materials:**\n\n1.  Add here.\n2.  Add here.\n:::\n\n### Acknowledgements\n\nMaterial for this lecture was borrowed and adopted from\n\n-   Add here.\n\n### Install new packages\n\nBefore we begin, you will need to install\nthese packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"rvest\")\n```\n:::\n\n\nNow we load a few R packages\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(rvest)\n```\n:::\n\n\n\n# Learning objectives\n\n::: callout-note\n# Learning objectives\n\n**At the end of this lesson you will:**\n\n-   Add here.\n:::\n\n# Add lecture here\n\n\n## Reading in XML or HTML files using `rvest`\n\nDo we want to purchase a book on Amazon? \n\nNext we are going to learn about what to do if\nyour data is on a website (XML or HTML) formatted \nto be read by humans instead of R.\n\nWe will use the (really powerful)\n[rvest](https://cran.r-project.org/web/packages/rvest/rvest.pdf)\nR package to do what is often called \n\"scraping data from the web\". \n\nBefore we do that, we need to set up a \nfew things:\n\n* [SelectorGadget tool](http://selectorgadget.com/)\n* [rvest and SelectorGadget guide](https://cran.r-project.org/web/packages/rvest/vignettes/selectorgadget.html)\n* [Awesome tutorial for CSS Selectors](http://flukeout.github.io/#)\n* [Introduction to stringr](https://cran.r-project.org/web/packages/stringr/vignettes/stringr.html)\n* [Regular Expressions/stringr tutorial](https://stat545-ubc.github.io/block022_regular-expression.html)\n* [Regular Expression online tester](https://regex101.com/#python)- explains a regular expression as it is built, and confirms live whether and how it matches particular text.\n\nWe're going to be scraping [this page](http://www.amazon.com/ggplot2-Elegant-Graphics-Data-Analysis/product-reviews/0387981403/ref=cm_cr_dp_qt_see_all_top?ie=UTF8&showViewpoints=1&sortBy=helpful): it just contains the (first page of) reviews of the \nggplot2 book by Hadley Wickham. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"http://www.amazon.com/ggplot2-Elegant-Graphics-Data-Analysis/product-reviews/0387981403/ref=cm_cr_dp_qt_see_all_top?ie=UTF8&showViewpoints=1&sortBy=helpful\"\n```\n:::\n\n\nWe use the `rvest` package to download this page.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\nh <- read_html(url)\n```\n:::\n\n\nNow `h` is an `xml_document` that contains the contents of the page:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{html_document}\n<html lang=\"en-us\" class=\"a-no-js\" data-19ax5a9jf=\"dingo\">\n[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n[2] <body>\\n<span id=\"cr-state-object\" data-state='{\"asin\":\"0387981403\",\"devi ...\n```\n:::\n:::\n\n\nHow can you actually pull the interesting \ninformation out? That's where CSS selectors come in.\n\n### CSS Selectors\n\nCSS selectors are a way to specify a subset of \nnodes (that is, units of content) on a web page\n(e.g., just getting the titles of reviews). \nCSS selectors are very powerful and not too \nchallenging to master- here's \n[a great tutorial](http://flukeout.github.io/#) \nBut honestly you can get a lot done even with \nvery little understanding, by using a tool \ncalled SelectorGadget.\n\nInstall the [SelectorGadget](http://selectorgadget.com/) \non your web browser. (If you use Chrome you can\nuse the Chrome extension, otherwise drag the \nprovided link into your bookmarks bar). \n[Here's a guide for how to use it with rvest to \"point-and-click\" your way to a working selector](http://selectorgadget.com/).\n\nFor example, if you just wanted the titles, \nyou'll end up with a selector that looks \nsomething like `.a-text-bold span`. You can pipe\nyour HTML object along with that selector \ninto the `html_nodes` function, to select \njust those nodes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh %>%\n  html_nodes(\".a-text-bold span\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n{xml_nodeset (10)}\n [1] <span>Tippping point for R data visualization.</span>\n [2] <span>This classic book is now 49 (dog) years old...</span>\n [3] <span>Must-have reference for R graphics</span>\n [4] <span>Nice resource, but already out of date</span>\n [5] <span>Still a great package and highly worth learning - but the text is  ...\n [6] <span>Graphing in R</span>\n [7] <span>Excellent</span>\n [8] <span>Excellent R resource for the Kindle</span>\n [9] <span>The best guide to the best graphics (I think) out there.</span>\n[10] <span>Ggplot2 - graphs that made me leave excel and use R</span>\n```\n:::\n:::\n\n\nBut you need the text from each of these, not the full tags. Pipe to the `html_text` function to pull these out:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreview_titles <- h %>%\n  html_nodes(\".a-text-bold span\") %>%\n  html_text()\n\nreview_titles\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Tippping point for R data visualization.\"                                                    \n [2] \"This classic book is now 49 (dog) years old...\"                                              \n [3] \"Must-have reference for R graphics\"                                                          \n [4] \"Nice resource, but already out of date\"                                                      \n [5] \"Still a great package and highly worth learning - but the text is getting quite out of date.\"\n [6] \"Graphing in R\"                                                                               \n [7] \"Excellent\"                                                                                   \n [8] \"Excellent R resource for the Kindle\"                                                         \n [9] \"The best guide to the best graphics (I think) out there.\"                                    \n[10] \"Ggplot2 - graphs that made me leave excel and use R\"                                         \n```\n:::\n:::\n\n\nNow we've extracted something useful! Similarly, \nlet's grab the format (hardcover or paperback).\nSome experimentation with SelectorGadget \nshows it's:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh %>%\n  html_nodes(\".a-size-mini.a-color-secondary\") %>%\n  html_text()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n:::\n\n\nNow, we may be annoyed that it always\nstarts with `Format: `. Let's introduce \nthe `stringr` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nformats <- h %>%\n  html_nodes(\".a-size-mini.a-color-secondary\") %>%\n  html_text() %>%\n  stringr::str_replace(\"Format: \", \"\")\n\nformats\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n:::\n\n\nWe could do similar exercise for extracting\nthe number of stars and whether or not someone\nfound a review useful. This would help us decide\nif we were interested in purchasing the book! \n\n\n\n\n# Post-lecture materials\n\n### Final Questions\n\nHere are some post-lecture questions to help you think about the material discussed.\n\n::: callout-note\n### Questions\n\n1.  Add here.\n:::\n\n### Additional Resources\n\n::: callout-tip\n-   Add here.\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}